########################################################################################################################
##                                                                                                                    ##
##                                              Version 0.0.1 (12/1/2021)                                             ##
##                                                                                                                    ##
########################################################################################################################
Documents uploaded to Github:

    main.py
    extract_member_forces.py
    generate_mem_array_info.py

Description:
    Initial commit of working prototype for extracting member forces. Program can parse .gto file and search for
    instances of 'LIST FOR' and return a csv file of results based on inputs from the user. This includes, specific
    beams, loads, and joints as well as which instance of 'LIST FOR' is requested.
########################################################################################################################
##                                                                                                                    ##
##                                              Version 0.0.2  (1/2/2022)                                             ##
##                                                                                                                    ##
########################################################################################################################
Documents uploaded to Github:

    save_output.py (formerly main.py)
    change_log.txt
    generate_mem_array_info.py
    extract_member_forces.py
    main.py

Description:

    Added class structure to all files
    Added 'change_log.txt' to track high level changes between program versions

    Functionality Changes:

        Added ability to select output results from multiple member data sets at the same time
        Added ability to modify or delete parameters from selected data sets
        Added functionality to chose from single .csv file or .xlsx file with each member set as a separate tab

    Interface Changes:

        Added GUI with the following features:

            Select working directory and select output file to parse
            Choose from list of available member force results to create new result set
            Modify, delete, or add new results sets
########################################################################################################################
##                                                                                                                    ##
##                                              Version 0.0.3  (1/25/2022)                                            ##
##                                                                                                                    ##
########################################################################################################################
Documents uploaded to Github:

    save_output.py
    generate_mem_array_info.py
    extract_member_forces.py
    error_handling.py
    main.py
    change_log.txt

Description:

    This version mainly focused on addressing error handling for the GUI and Member Force Extraction portion of the
    program. Functionality was added as described below.

    Functionality Changes:

        Added ability to store generated result sets in a 'properties' file and added the ability to read from the file
        and restore generated results.
        Added ability to delete multiple selected member results sets at once
        Added checks to insure a directory and file are selected
        Added 'safety' by changing which buttons are enabled or disabled at a given time, preventing unexpected user
        inputs.
        Changed from manipulating array with numpy concatenate to using lists and list comprehension. Run time is now
        an O(n) operation instead of O(n^2). Yay!
        Added error window and warning popups for invalid inputs into the 'store member forces' window
        Changed save to excel option to write contents to rows and columns rather than just rows. This results in each
        piece of data going into its own cell - results in not having to do text to columns manually.
        When result is modified, the previous results are repopulated in the 'new member results' window


    Interface Changes:

        Added button to store created results sets
        modified button size on member force extraction page to be consistent
        Added error popups for several error types
        Removed output format frame and radio buttons. User is now allowed to save file using Windows file dialog
########################################################################################################################
##                                                                                                                    ##
##                                              Version 0.1.0  (1/29/2022)                                            ##
##                                                                                                                    ##
########################################################################################################################
Documents uploaded to Github:

    joint_reactions_GUI
    member_force_GUI
    error_handling.py
    main.py
    change_log.txt
    utilities_GUI.py

Description:

    Mostly bug fixes and small GUI cleanup. Split GUI into different scripts for ease of tracking. Updated version to
    0.1.0 - Member force extraction module is functionally and graphically complete. Program runs as intended with full
    initial functionality for that module. Added utilities_GUI.py to capture all commonly used GUI functions.

    Functionality Changes:

        Fixed bug where deleting a member force result set and then storing a properties file would assign the first
        dictionary entry "2" instead of starting at "1"
        Fixed bug where clicking on "modify Result" would paste "ALL" in the beam and load text input sometimes
        resulting in "ALLALL" being displayed.


    Interface Changes:

        Moved second main window to tabs with each tab representing a different functionality of the program (i.e.
        member forces, joint reactions, code check, etc.)
        Added exit button to second main window.
        Cleaned up error popup window to be consistent size for all errors, only changing the text which is displayed.
        When error popup occurs all other windows are frozen (cannot be interacted with) until the error window is
        closed.
        Fixed spelling mistakes in error popups and program description.
        Added tooltips to the member force selection load_text and beam_text box to explain acceptable inputs
        Centered windows on screen where it made sense.
########################################################################################################################
##                                                                                                                    ##
##                                              Version 0.1.1  (2/26/2022)                                            ##
########################################################################################################################
Documents uploaded to Github:

    change_log.txt
    extract_member_forces.py
    generate_mem_array_info.py
    save_output.py
    error_handling.py

Description:

    Bug fixes related to member force extraction discovered while developing joint reaction extraction. Member
    extraction is now based on a fixed column widths for FX, FY, FZ, MX, MY, MZ.

    Functionality Changes:

        Revised parsing of member forces based on fixed column width depending on the number of headers
        Major revision to how the member force dats sets are parsed. The data is now subdivided into "blocks" which
        are the size of the individual member. Each block is searched for number of load cases and joints and checked
        for any GTSTRUDL warning messages. This change resolves a bug which occurred when there were warning messages
        in the output or if truss members and non truss members were combined in a single output.


    Interface Changes:

        None